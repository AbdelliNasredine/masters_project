<div class="grid">
  {{> header}}
  {{> navigation }}
  <main class="main">
    <div class="header">
      <input type="hidden" name="pid" value="{{parking.id}}">
      <div>
        <h3 class="header-title">{{parking.name}}</h3>
        <p>{{parking.description}}</p>
      </div>
      {{!-- <div class="header-actions">
        <a href="/admin/parks/create" class="btn btn-primary">create new park</a>
      </div> --}}
    </div>
    <div class="body">
      <div class="parking-grid">
        <div class="left">
          <div class="card">
            <div class="card-header">
              <h5 class="card-title">Details</h5>
            </div>
            <div class="card-body">
              <div>
                <b><label>Geo Location</label></b>
                <p>latitude: {{parking.lat}} longitude: {{parking.lon}}</p>
              </div>
              <div>
                <b><label>Address</label></b>
                <p>{{parking.address}}</p>
              </div>
              <div>
                <b><label>Rent fees</label></b>
                <p>{{#if parking.rentPrice}} {{parking.rentPrice}} DA {{else}} FREE {{/if}}</p>
              </div>
            </div>
          </div>
        </div>
        <div class="right">
          <div class="card" style="height: 100%;">
            <div class="card-header">
              <h5 class="card-title">Parking Spots</h5>
            </div>
            <div class="card-body">
              {{#if parking.parkingSpots}}
              <div class="spots-header">
                <h5>View Spot Status</h5>
                <div class="spots-status">
                  Free <div class="indicator green"></div>
                  Occupied <div class="indicator red"></div>
                </div>
              </div>
              <div class="spots">
                {{!-- ADD HERE --}}
                {{#each parking.parkingSpots}}
                <div class="spot">Spot <br> #{{this.id}}</div>
                {{/each}}
              </div>
              {{else}}
              <div class="no-spots">
                No Parking Spot found, please configure the parking
                <button data-micromodal-trigger="modal-2">configure</button>
              </div>
              {{/if}}
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</div>
<script src="/node_modules/tata-js/dist/tata.js"></script>
<script>
  const updateSpots = (list) => {
    const spotsElement = document.querySelector(".spots");
    spotsElement.innerHTML = "";
    list.forEach(item => {
      spotsElement.innerHTML += `
        <div class="spot ${item.status == "FREE" ? "green" : "red"}">Spot <br> ${item.id}</div>
      `;
    });
  }

  const updateUI = (data) => {
    const parkingId = document.querySelector("input[type=hidden]").value;
    const spilt = data.split("$");
    const topic = spilt[0].split("/");
    console.log(topic[0]);
    if (topic[0] == "parking" && topic[1] == parkingId) {
      const spotStatus = spilt[1].split(" ");
      console.log(spotStatus);
      let spotsList = [];
      for (let i = 0; i < spotStatus.length; i++) {
        const spot = spotStatus[i].split(",");
        spotsList.push({ id: spot[0], status: spot[1].trim() });
      }
      updateSpots(spotsList);
    } else if (topic[0] == "auth") {

      const plate = spilt[1];
      tata.warn('Licence Plate Detected', plate);
    }
  }

  // Create WebSocket connection.
  const socket = new WebSocket('ws://localhost:8080');

  // Connection opened
  socket.addEventListener('open', function (event) {
    console.log("Connected to websockets server");
  });
  // Listen for messages
  socket.addEventListener('message', function (event) {
    console.log('Message from server ', event.data);
    updateUI(event.data);
  });
</script>